openapi: 3.0.0
info:
  title: Books Management API
  description: API for managing books
  version: 1.0.0
servers:
  - url: https://{hostname}/api/v1
    variables:
      hostname:
        default: anybook.online
paths:
  /books:
    get:
      summary: Get all books
      parameters:
        - name: offset
          in: query
          description: Number of items to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookList'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: The created book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the book to perform operation on
        schema:
          type: string
    get:
      operationId: getBookByID
      summary: Get a book by ID
      responses:
        '200':
          description: The requested book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      operationId: updateBookByID
      summary: Update a book by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: The updated book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: deleteBookByID
      summary: Delete a book by ID
      responses:
        '204':
          description: Book deleted successfully
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /books/search:
    get:
      summary: Search books by title, author, or other attributes
      parameters:
        - name: q
          in: query
          description: Search query term
          schema:
            type: string
        - name: offset
          in: query
          description: Number of items to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Books matching the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookList'
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the book
        title:
          type: string
          description: Title of the book
        author:
          type: string
          description: Author of the book
        category:
          type: string
          description: Category of the book
        image_link:
          type: string
          description: Link to the image of the book cover
        description:
          type: string
          description: Description of the book
        featured:
          type: boolean
          description: Indicates whether the book is featured or not
        summary:
          type: string
          description: Summary of the book
      required:
        - title
        - author
        - category
        - image_link
        - description
        - featured
        - summary
    BookItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the book
        title:
          type: string
          description: Title of the book
        author:
          type: string
          description: Author of the book
        image_link:
          type: string
          description: Link to the image of the book cover
        summary:
          type: string
          description: Summary of the book
      required:
        - id
        - title
        - author
        - image_link
        - summary
    BookList:
      type: object
      properties:
        total:
          type: integer
          description: Total number of results
        items:
          type: array
          items:
            $ref: '#/components/schemas/BookItem'
      required:
        - total
        - items
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        msg:
          type: string
          description: Description of the error
      required:
        - code
        - msg

