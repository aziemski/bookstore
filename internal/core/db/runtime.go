// Code generated by ent, DO NOT EDIT.

package db

import (
	"github.com/aziemski/bookstore/internal/core/db/book"
	"github.com/aziemski/bookstore/internal/core/db/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	bookFields := schema.Book{}.Fields()
	_ = bookFields
	// bookDescTitle is the schema descriptor for title field.
	bookDescTitle := bookFields[1].Descriptor()
	// book.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	book.TitleValidator = bookDescTitle.Validators[0].(func(string) error)
	// bookDescID is the schema descriptor for id field.
	bookDescID := bookFields[0].Descriptor()
	// book.IDValidator is a validator for the "id" field. It is called by the builders before save.
	book.IDValidator = func() func(string) error {
		validators := bookDescID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(id string) error {
			for _, fn := range fns {
				if err := fn(id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
}
